{"version":3,"sources":["app.js"],"names":["express","require","path","logger","bodyParser","favicon","users","app","sassMiddleware","set","use","json","urlencoded","extended","cookieParser","src","join","__dirname","dest","indentedSyntax","req","res","next","err","Error","sourceMap","message","status","error","get","locals"],"mappings":"aAAA,IAAIA,QAAUC,QAAQ,WAClBC,KAAOD,QAAQ,QADfD,QAAUC,QAAQ,iBAGlBE,OAASF,QAAQ,UAFjBC,aAAeD,QAAnB,iBAIIG,WAAaH,QAAQ,eAHrBI,eAAiBJ,QAAC,wBAClBE,MAAMF,QAAU,sCAMhBK,MAAQL,QAAQ,sCAEhBM,IAAMP,UALVO,IAAIC,IAAAA,QAAAA,KAAiBP,KAAAA,UAAQ,UAS7BM,IAAIE,IAAI,cAAe,OAIvBF,IAAIG,IAAIP,OAAO,QARfI,IAAIA,IAAGH,WAAPO,QAUAJ,IAAIG,IAAIN,WAAWQ,WAAW,CAAEC,UAAU,KAP1CN,IAAIE,IAAIK,gBACRP,IAAIE,IAAID,eAAe,CAGvBO,IAAAb,KAAAc,KAAAC,UAAA,UAOEC,KAAMhB,KAAKc,KAAKC,UAAW,UAN7BV,gBAAe,EACfA,WAAQH,KACwBS,IAAAA,IAAAA,QAAU,OAAAX,KAAAc,KAAAC,UAAA,YAC1CV,IAAIG,IAAII,IAAAA,OACRP,IAAIG,IAAIF,SAAAA,OAGNW,IAAAA,IAAAA,SAAcC,EAHOC,EAAAC,GAGC,IAAAC,EAAA,IAAAC,MAAA,aACtBC,EAAAA,OAAW,IAJbH,EAAAC,KAmBAhB,IAAIG,IAAI,SAASa,EAAKH,EAAKC,EAAKC,GAN9BD,EAAIE,OAAMG,QAAUH,EAAAG,QACpBH,EAAII,OAAJC,MAAA,gBAAAR,EAAAb,IAAAsB,IAAA,OAAAN,EAAA,GAWAF,EAAIM,OAAOJ,EAAII,QAAU,KAN3BpB,EAAIG,OAAI,WAGNW,OAAIS,QAAOF","file":"app.min.js","sourcesContent":["var express = require('express');\nvar path = require('path');\nvar favicon = require('serve-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\nvar sassMiddleware = require('node-sass-middleware');\n\nvar index = require('../telegramMsg-master/routes/index');\nvar users = require('../telegramMsg-master/routes/users');\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(sassMiddleware({\n  src: path.join(__dirname, 'public'),\n  dest: path.join(__dirname, 'public'),\n  indentedSyntax: true, // true = .sass and false = .scss\n  sourceMap: true\n}));\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', index);\napp.use('/users', users);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"]}